diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0af63c1..bb3bb74 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -120,78 +120,9 @@ ELSE(X11_FOUND)
   MESSAGE(STATUS "Looking for XLib - not found")
 ENDIF(X11_FOUND)
 
-# DRM
-pkg_check_modules(DRM REQUIRED libdrm)
-IF(DRM_FOUND)
-  MESSAGE(STATUS "Looking for DRM - found at ${DRM_PREFIX} ${DRM_VERSION}")
-  INCLUDE_DIRECTORIES(${DRM_INCLUDE_DIRS})
-ELSE(DRM_FOUND)
-  MESSAGE(STATUS "Looking for DRM - not found")
-ENDIF(DRM_FOUND)
-
-# DRM Intel
-pkg_check_modules(DRM_INTEL libdrm_intel>=2.4.52)
-IF(DRM_INTEL_FOUND)
-  INCLUDE_DIRECTORIES(${DRM_INTEL_INCLUDE_DIRS})
-  MESSAGE(STATUS "Looking for DRM Intel - found at ${DRM_INTEL_PREFIX} ${DRM_INTEL_VERSION}")
-  #userptr support starts from 2.4.57, but 2.4.58 is the actual stable release
-  IF(DRM_INTEL_VERSION VERSION_GREATER 2.4.57)
-    MESSAGE(STATUS "Enable userptr support")
-    SET(DRM_INTEL_USERPTR "enable")
-  ELSE(DRM_INTEL_VERSION VERSION_GREATER 2.4.57)
-    MESSAGE(STATUS "Disable userptr support")
-  ENDIF(DRM_INTEL_VERSION VERSION_GREATER 2.4.57)
-  IF(DRM_INTEL_VERSION VERSION_GREATER 2.4.59)
-    MESSAGE(STATUS "Enable EU total query support")
-    SET(DRM_INTEL_EU_TOTAL "enable")
-    MESSAGE(STATUS "Enable subslice total query support")
-    SET(DRM_INTEL_SUBSLICE_TOTAL "enable")
-  ELSE(DRM_INTEL_VERSION VERSION_GREATER 2.4.59)
-    MESSAGE(STATUS "Disable EU total query support")
-    MESSAGE(STATUS "Disable subslice total query support")
-  ENDIF(DRM_INTEL_VERSION VERSION_GREATER 2.4.59)
-ELSE(DRM_INTEL_FOUND)
-  MESSAGE(FATAL_ERROR "Looking for DRM Intel (>= 2.4.52) - not found")
-ENDIF(DRM_INTEL_FOUND)
-
-# CMRT
-pkg_check_modules(CMRT libcmrt)
-IF(CMRT_FOUND)
-INCLUDE_DIRECTORIES(${CMRT_INCLUDE_DIRS})
-ENDIF(CMRT_FOUND)
-
 # Threads
 Find_Package(Threads)
 
-IF(X11_FOUND)
-# OpenGL (not use cmake helper)
-pkg_check_modules(OPENGL gl)
-IF(OPENGL_FOUND)
-  INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIRS})
-  MESSAGE(STATUS "Looking for OpenGL - found at ${OPENGL_PREFIX}")
-ELSE(OPENGL_FOUND)
-  MESSAGE(STATUS "Looking for OpenGL - not found")
-ENDIF(OPENGL_FOUND)
-
-# Xext
-pkg_check_modules(XEXT REQUIRED xext)
-IF(XEXT_FOUND)
-  INCLUDE_DIRECTORIES(${XEXT_INCLUDE_DIRS})
-  MESSAGE(STATUS "Looking for Xext - found at ${XEXT_PREFIX}")
-ELSE(XEXT_FOUND)
-  MESSAGE(STATUS "Looking for Xext - not found")
-ENDIF(XEXT_FOUND)
-
-# Xfixes
-pkg_check_modules(XFIXES REQUIRED xfixes)
-IF(XFIXES_FOUND)
-  INCLUDE_DIRECTORIES(${XFIXES_INCLUDE_DIRS})
-  MESSAGE(STATUS "Looking for Xfixes - found at ${XFIXES_PREFIX}")
-ELSE(XFIXES_FOUND)
-  MESSAGE(STATUS "Looking for Xfixes - not found")
-ENDIF(XFIXES_FOUND)
-ENDIF(X11_FOUND)
-
 pkg_check_modules(EGL egl)
 IF(EGL_FOUND)
   MESSAGE(STATUS "Looking for EGL - found at ${EGL_PREFIX}")
@@ -260,13 +191,6 @@ ENDIF(BUILD_EXAMPLES)
 
 ADD_SUBDIRECTORY(include)
 ADD_SUBDIRECTORY(backend)
-ADD_SUBDIRECTORY(src)
-ADD_SUBDIRECTORY(utests)
-
-# compile benchmark only if standalone compiler is not provided
-IF (NOT (USE_STANDALONE_GBE_COMPILER STREQUAL "true"))
-ADD_SUBDIRECTORY(benchmark)
-ENDIF (NOT (USE_STANDALONE_GBE_COMPILER STREQUAL "true"))
 
 IF(BUILD_EXAMPLES)
 ADD_SUBDIRECTORY(examples)
